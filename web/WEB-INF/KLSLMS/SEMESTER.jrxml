<?xml version="1.0" encoding="UTF-8"?>
<!-- Created with Jaspersoft Studio version 6.10.0.final using JasperReports Library version 6.10.0-unknown  -->
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="SEMESTER" pageWidth="595" pageHeight="1000" columnWidth="555" leftMargin="20" rightMargin="20" topMargin="0" bottomMargin="0" uuid="ce570d45-8267-4227-adea-9c7c910e20b0">
	<property name="com.jaspersoft.studio.data.defaultdataadapter" value="SOG"/>
	<property name="com.jaspersoft.studio.data.sql.tables" value=""/>
	<style name="Crosstab_CH" mode="Opaque" backcolor="#FFFFFF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab_CG" mode="Opaque" backcolor="#FFFFFF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab_CT" mode="Opaque" backcolor="#FFFFFF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab_CD" mode="Opaque" backcolor="#FFFFFF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<subDataset name="Chart2" uuid="17b0b2d4-5bd4-45d3-8fbb-01be01ec780c">
		<property name="com.jaspersoft.studio.data.defaultdataadapter" value="SOG"/>
		<property name="com.jaspersoft.studio.data.sql.tables" value=""/>
		<parameter name="ST_ID" class="java.lang.String"/>
		<queryString>
			<![CDATA[select  v.student_id, v.student_name, v.quar_name, sum(v.full_grade)/count(v.full_grade) from (select
  /*+ NO_BNL() */
  z.student_id, z.student_name, z.course_id, z.quar_name, z.order_num
, z.name, z.class_name, z.level_code, z.hide_num, z.user_name,z.Home_address,z.secion_name
, z.west_weight,z.main_period_wight,z.main_pirod_name, z.cal_in_total, z.qur_id,z.sub_period_weight
, sum(IF ((select  /*+ NO_BNL() */ id from categories where parent_id = z.parent_id  and deleted_at is null limit 1) is null,z.full_grade1 , IF(z.full_grade1 is null,0,z.full_grade1) * z.PARENT_CATEGORY_WEIGHT/100)) AS full_grade
, (select  /*+ NO_BNL() */ total_grade from courses where id = z.course_id) AS total_grade


from -- (Z)
(select 
    /*+ NO_BNL() */
	x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num, x.parent_id,
	x.name, x.class_name, x.level_code, x.hide_num
     , (SELECT  /*+ NO_BNL() */ distinct username FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS user_name
     , (SELECT  /*+ NO_BNL() */ distinct home_address FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS Home_address
	 , (select /*+ NO_BNL() */ name from categories where id = x.parent_id) AS category_name
	 ,(SELECT /*+ NO_BNL() */ name FROM sections where id = (select section_id from stages where id = (select stage_id from levels where level_code = x.level_code and deleted_at is null) and deleted_at is null) and deleted_at is null ) as secion_name
	 , (select /*+ NO_BNL() */ weight from course_grading_periods_categories where category_id = x.parent_id and courses_grading_period_id = x.cgp_id LIMIT 1) PARENT_CATEGORY_WEIGHT
	 , SUM(x.category_grade) AS full_grade1
     , x.qur_id
	 , IF((SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */ distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1) is null,100,(SELECT /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1)) AS main_period_wight
     , (SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = x.qur_id and course_id = x.course_id limit 1) AS sub_period_weight
	 , if((SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) is null ,x.quar_name, (SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) ) AS main_pirod_name
     , x.cgp_id
     ,(select  /*+ NO_BNL() */ calculated_in_total from courses where id = x.course_id) AS cal_in_total
     ,(
		select
	 /*+ NO_BNL() */ 
	 IF(sum(z.PARENT_CATEGORY_WEIGHT) is null,0,sum(z.PARENT_CATEGORY_WEIGHT)) AS weight from (
select 
    /*+ NO_BNL() */
	x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num, x.parent_id,
	x.name, x.class_name, x.level_code, x.hide_num
     , (SELECT  /*+ NO_BNL() */ distinct username FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS user_name
     , (SELECT  /*+ NO_BNL() */ distinct home_address FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS Home_address
	 , (select /*+ NO_BNL() */ name from categories where id = x.parent_id) AS category_name
	 , (select /*+ NO_BNL() */ weight from course_grading_periods_categories where category_id = x.parent_id and courses_grading_period_id = x.cgp_id LIMIT 1) PARENT_CATEGORY_WEIGHT
	 , SUM(x.category_grade) AS full_grade1
     , x.qur_id
	 , IF((SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */ distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1) is null,100,(SELECT /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1)) AS main_period_wight
     , (SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = x.qur_id and course_id = x.course_id limit 1) AS sub_period_weight
	 , if((SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) is null ,x.quar_name, (SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) ) AS main_pirod_name
     , x.cgp_id
     , IF(x.status is null ,0,x.status) AS status

from  -- (X)

	(select /*+ NO_BNL() */ z.*, courses.name, d.class_name, d.level_code, d.hide_num 
	
	  from -- (Z)
	  
		(select /*+ NO_BNL() */ f.student_id, f.student_name, f.course_id, f.quar_name, f.qur_id, f.order_num,f.category_name,f.category_weight, f.max_grade,
				if(f.parent_id IS NULL,f.category_id,f.parent_id) AS parent_id,IF(f.full_grade IS NULL,0,f.full_grade) AS full_grade, f.cgp_id
                ,(IF(f.full_grade IS NULL,0,f.full_grade)*(f.category_weight *(select /*+ NO_BNL() */ weight from  course_grading_periods_categories where category_id = if(f.parent_id IS NULL,f.category_id,f.parent_id) and courses_grading_period_id = f.cgp_id limit 1))
                /(select  /*+ NO_BNL() */ sum(weight) from course_grading_periods_categories where category_id IN (select /*+ NO_BNL() */ id from categories where id = f.new_cat)
					and deleted_at is null and courses_grading_period_id= f.cgp_id ))/IF (f.category_weight is null , 0 ,f.category_weight) AS category_grade
                    , f.status
                
				
		  from  -- (F)
		 
				(select  /*+ NO_BNL() */ e.*,(e.grade*e.category_weight)/e.max_grade AS full_grade , if(e.parent_id IS NULL,e.category_id,e.parent_id) as new_cat
				
				 from  -- (E)


					(select /*+ NO_BNL() */ d.student_id, d.student_name, d.category_id, d.category_name, d.parent_id, d.course_id, d.quar_name, d.qur_id
							,sum(d.grade) AS grade, sum(d.max_grade) AS max_grade, d.category_weight AS category_weight, d.order_num, d.cgp_id , d.status
							
					 from  -- (D)
						
							(select /*+ NO_BNL() */ d.student_id, d.student_name, d.category_id, d.category_name, d.parent_id, d.course_id, d.quar_name, d.qur_id
							,sum(d.grade) AS grade, sum(d.max_grade) AS max_grade, d.category_weight AS category_weight, d.order_num, d.cgp_id, d.status
							
					 from  -- (D)
						
							(select /*+ NO_BNL() */ * 
							
							  from -- (B)
								
								(SELECT  /*+ NO_BNL() */ DISTINCT students.id AS student_id,
										users.name AS student_name,
										assignments.id AS item_id,
									   'assignment' AS item_type,
										assignments.name AS item_name,
										IF(st_sub_assi.student_status = 1,0,assignments.points) AS max_grade,
										st_sub_assi.id AS submission_id,
										if(st_sub_assi.student_status = 2, 0, st_sub_assi.student_status) AS status,
										IF(st_sub_assi.student_status = 1,0,IF(st_sub_assi.grade IS NULL, 0, st_sub_assi.grade)) AS grade,
										assignments.category_id AS category_id,
										categories.name AS category_name, 
										cg.course_id, 
										c_gp_cat.weight AS category_weight,
										assi_cg.hide_grade AS hide_grade, 
										c_gp.grading_period_id AS qur_id,
										categories.parent_id AS parent_id,
										c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL AND students.id = $P{ST_ID} 
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN assignments_course_groups assi_cg on assi_cg.course_group_id = cg.id AND assi_cg.deleted_at IS NULL
										LEFT OUTER JOIN assignments on assignments.id = assi_cg.assignment_id AND assignments.deleted_at IS NULL
										LEFT OUTER JOIN student_submitted_assignments st_sub_assi on st_sub_assi.student_id = students.id AND st_sub_assi.assignment_id = assignments.id 
										AND st_sub_assi.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = assignments.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id 
										AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where   assignments.grading_period_id = c_gp.grading_period_id 
										AND cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												quizzes.id AS item_id, 
												'quiz' AS item_type, 
												quizzes.name AS item_name,
												IF(quiz_sub.student_status = 1,0,quizzes.total_score) AS max_grade, 
												quiz_sub.id AS submission_id, 
												if(quiz_sub.student_status=2, 0, quiz_sub.student_status) AS status,
												IF(quiz_sub.student_status = 1,0,IF(quiz_sub.score IS NULL, 0, quiz_sub.score)) AS grade, 
												quizzes.category_id AS category_id, 
												categories.name AS category_name,
												cg.course_id,
												c_gp_cat.weight AS category_weight, 		         		         
												quiz_cg.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL AND students.id = $P{ST_ID}
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN course_groups_quizzes quiz_cg on quiz_cg.course_group_id = cg.id AND quiz_cg.deleted_at IS NULL
										LEFT OUTER JOIN quizzes on quizzes.id = quiz_cg.quiz_id AND quizzes.deleted_at IS NULL
										LEFT OUTER JOIN quiz_submissions quiz_sub on quiz_sub.student_id = students.id AND quiz_sub.quiz_id = quizzes.id
										  AND quiz_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = quizzes.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id 
														AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id 
													AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
													
										WHERE quizzes.grading_period_id = c_gp.grading_period_id
												AND  cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												grade_items.id AS item_id, 
												'grade_item' AS item_type,
												grade_items.name as item_name, 
												IF(g_sub.student_status = 1,0,grade_items.max_grade) AS max_grade, 
												g_sub.id AS submission_id,
												if(g_sub.student_status = 2,0,g_sub.student_status) AS status, 
												IF(g_sub.student_status = 1,0,IF(g_sub.grade IS NULL, 0 , g_sub.grade)) AS grade,
												grade_items.category_id AS category_id,		              
												categories.name AS category_name , 
												cg.course_id, 		  
												c_gp_cat.weight AS category_weight, 
												grade_items.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL AND students.id = $P{ST_ID}
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN grade_items on grade_items.course_group_id = cg.id AND grade_items.deleted_at IS NULL
										LEFT OUTER JOIN grade_submissions g_sub on g_sub.student_id = students.id AND g_sub.grade_item_id = grade_items.id
										  AND g_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = grade_items.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id 
										  AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where  grade_items.grading_period_id = c_gp.grading_period_id 
										AND   cg.deleted_at IS NULL
										)b
									left join -- (C)
									(
										SELECT /*+ NO_BNL() */ distinct cat.id, cat.name, cgp.course_id AS crs_id, cgpc.weight, cgpc.courses_grading_period_id, cgp.grading_period_id, gp.name AS quar_name, 
										courses.order AS order_num FROM categories cat
										inner join course_grading_periods_categories cgpc on cat.id = cgpc.category_id and cgpc.deleted_at is null
										inner join courses_grading_periods cgp on cgp.id =  cgpc.courses_grading_period_id and cgp.deleted_at is null
										inner join grading_periods gp on gp.id = cgp.grading_period_id
										inner join courses on courses.id = cgp.course_id and courses.deleted_at is null
										where cat.deleted_at is null
									)c
									on b.qur_id=c.grading_period_id and c.crs_id=b.course_id and c.id = b.category_id
							)d
						group by  d.student_id, d.student_name, d.category_id, d.quar_name, d.course_id
								 , d.category_name, d.category_weight, d.order_num, d.cgp_id, d.parent_id,d.qur_id,d.status
                                    
							)d
						group by  d.student_id, d.student_name, d.category_id, d.quar_name, d.course_id
								 , d.category_name, d.category_weight, d.order_num, d.cgp_id, d.parent_id,d.qur_id, d.status
					)e
				)f
		)z  
		
	INNER JOIN courses on z.course_id = courses.id
	inner join
	(SELECT /*+ NO_BNL() */ csg.student_id as student_id, cg.name as class_name, levels.level_code AS level_code, courses.hide as hide_num, courses.calculated_in_total
		FROM student_course_groups csg
		inner join course_groups cg on csg.course_group_id=cg.id and cg.deleted_at is null
		inner join courses on cg.course_id= courses.id and courses.deleted_at is null
		inner join levels on courses.level_id=levels.id and levels.deleted_at is null
		where csg.deleted_at is null
		and courses.hide = "false"
		and csg.student_id=570
		 
		group by student_id, class_name, level_code
		) d on d.student_id = z.student_id
		
	
)
x

where x.status =1

group by  x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num
		, x.parent_id, x.name, x.class_name, x.level_code, x.hide_num
		, PARENT_CATEGORY_WEIGHT
		,x.cgp_id, x.qur_id, x.status
order by  x.level_code,x.quar_name, x.student_id,x.course_id,x.order_num
)z

left outer join 

(

select 
    /*+ NO_BNL() */
	x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num, x.parent_id,
	x.name, x.class_name, x.level_code, x.hide_num
     , (SELECT  /*+ NO_BNL() */ distinct username FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS user_name
     , (SELECT  /*+ NO_BNL() */ distinct home_address FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS Home_address
	 , (select /*+ NO_BNL() */ name from categories where id = x.parent_id) AS category_name
	 , (select /*+ NO_BNL() */ weight from course_grading_periods_categories where category_id = x.parent_id and courses_grading_period_id = x.cgp_id LIMIT 1) PARENT_CATEGORY_WEIGHT
	 ,(SELECT name FROM sections where id = (select section_id from stages where id = (select stage_id from levels where level_code =x.level_code  and deleted_at is null) and deleted_at is null) and deleted_at is null) AS section_name
	 , SUM(x.category_grade) AS full_grade1
     , x.qur_id
	 , IF((SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */ distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1) is null,100,(SELECT /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1)) AS main_period_wight
     , (SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = x.qur_id and course_id = x.course_id limit 1) AS sub_period_weight
	 , if((SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) is null ,x.quar_name, (SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) ) AS main_pirod_name
     , x.cgp_id
     , IF(x.status is null ,0,x.status) AS status

from  -- (X)

	(select /*+ NO_BNL() */ z.*, courses.name, d.class_name, d.level_code, d.hide_num 
	
	  from -- (Z)
	  
		(select /*+ NO_BNL() */ f.student_id, f.student_name, f.course_id, f.quar_name, f.qur_id, f.order_num,f.category_name,f.category_weight, f.max_grade,
				if(f.parent_id IS NULL,f.category_id,f.parent_id) AS parent_id,IF(f.full_grade IS NULL,0,f.full_grade) AS full_grade, f.cgp_id
                ,(IF(f.full_grade IS NULL,0,f.full_grade)*(f.category_weight *(select /*+ NO_BNL() */ weight from  course_grading_periods_categories where category_id = if(f.parent_id IS NULL,f.category_id,f.parent_id) and courses_grading_period_id = f.cgp_id limit 1))
                /(select  /*+ NO_BNL() */ sum(weight) from course_grading_periods_categories where category_id IN (select /*+ NO_BNL() */ id from categories where id = f.new_cat)
					and deleted_at is null and courses_grading_period_id= f.cgp_id ))/IF (f.category_weight is null , 0 ,f.category_weight) AS category_grade
                    , f.status
                
				
		  from  -- (F)
		 
				(select  /*+ NO_BNL() */ e.*,(e.grade*e.category_weight)/e.max_grade AS full_grade , if(e.parent_id IS NULL,e.category_id,e.parent_id) as new_cat
				
				 from  -- (E)


					(select /*+ NO_BNL() */ d.student_id, d.student_name, d.category_id, d.category_name, d.parent_id, d.course_id, d.quar_name, d.qur_id
							,sum(d.grade) AS grade, sum(d.max_grade) AS max_grade, d.category_weight AS category_weight, d.order_num, d.cgp_id , d.status
							
					 from  -- (D)
						
							(select /*+ NO_BNL() */ d.student_id, d.student_name, d.category_id, d.category_name, d.parent_id, d.course_id, d.quar_name, d.qur_id
							,sum(d.grade) AS grade, sum(d.max_grade) AS max_grade, d.category_weight AS category_weight, d.order_num, d.cgp_id, d.status
							
					 from  -- (D)
						
							(select /*+ NO_BNL() */ * 
							
							  from -- (B)
								
								(SELECT  /*+ NO_BNL() */ DISTINCT students.id AS student_id,
										users.name AS student_name,
										assignments.id AS item_id,
									   'assignment' AS item_type,
										assignments.name AS item_name,
										IF(st_sub_assi.student_status = 1,0,assignments.points) AS max_grade,
										st_sub_assi.id AS submission_id,
										if(st_sub_assi.student_status = 2  , 0, st_sub_assi.student_status) AS status,
										IF(st_sub_assi.student_status = 1,0,IF(st_sub_assi.grade IS NULL, 0, st_sub_assi.grade)) AS grade,
										assignments.category_id AS category_id,
										categories.name AS category_name, 
										cg.course_id, 
										c_gp_cat.weight AS category_weight,
										assi_cg.hide_grade AS hide_grade, 
										c_gp.grading_period_id AS qur_id,
										categories.parent_id AS parent_id,
										c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL AND students.id = $P{ST_ID}
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN assignments_course_groups assi_cg on assi_cg.course_group_id = cg.id AND assi_cg.deleted_at IS NULL
										LEFT OUTER JOIN assignments on assignments.id = assi_cg.assignment_id AND assignments.deleted_at IS NULL
										LEFT OUTER JOIN student_submitted_assignments st_sub_assi on st_sub_assi.student_id = students.id AND st_sub_assi.assignment_id = assignments.id 
										AND st_sub_assi.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = assignments.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id 
										AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where   assignments.grading_period_id = c_gp.grading_period_id 
										AND cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												quizzes.id AS item_id, 
												'quiz' AS item_type, 
												quizzes.name AS item_name,
												IF(quiz_sub.student_status = 1,0,quizzes.total_score) AS max_grade, 
												quiz_sub.id AS submission_id, 
												if(quiz_sub.student_status=2, 0, quiz_sub.student_status) AS status,
												IF(quiz_sub.student_status = 1,0,IF(quiz_sub.score IS NULL, 0, quiz_sub.score)) AS grade, 
												quizzes.category_id AS category_id, 
												categories.name AS category_name,
												cg.course_id,
												c_gp_cat.weight AS category_weight, 		         		         
												quiz_cg.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL AND students.id = $P{ST_ID}
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN course_groups_quizzes quiz_cg on quiz_cg.course_group_id = cg.id AND quiz_cg.deleted_at IS NULL
										LEFT OUTER JOIN quizzes on quizzes.id = quiz_cg.quiz_id AND quizzes.deleted_at IS NULL
										LEFT OUTER JOIN quiz_submissions quiz_sub on quiz_sub.student_id = students.id AND quiz_sub.quiz_id = quizzes.id
										  AND quiz_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = quizzes.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id 
														AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id 
													AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
													
										WHERE quizzes.grading_period_id = c_gp.grading_period_id
												AND  cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												grade_items.id AS item_id, 
												'grade_item' AS item_type,
												grade_items.name as item_name, 
												IF(g_sub.student_status = 1,0,grade_items.max_grade) AS max_grade, 
												g_sub.id AS submission_id,
												if(g_sub.student_status = 2,0,g_sub.student_status) AS status, 
												IF(g_sub.student_status = 1,0,IF(g_sub.grade IS NULL, 0 , g_sub.grade)) AS grade,
												grade_items.category_id AS category_id,		              
												categories.name AS category_name , 
												cg.course_id, 		  
												c_gp_cat.weight AS category_weight, 
												grade_items.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL AND students.id = $P{ST_ID}
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN grade_items on grade_items.course_group_id = cg.id AND grade_items.deleted_at IS NULL
										LEFT OUTER JOIN grade_submissions g_sub on g_sub.student_id = students.id AND g_sub.grade_item_id = grade_items.id
										  AND g_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = grade_items.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id 
										  AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where  grade_items.grading_period_id = c_gp.grading_period_id 
										AND   cg.deleted_at IS NULL
										)b
									left join -- (C)
									(
										SELECT /*+ NO_BNL() */ distinct cat.id, cat.name, cgp.course_id AS crs_id, cgpc.weight, cgpc.courses_grading_period_id, cgp.grading_period_id, gp.name AS quar_name, 
										courses.order AS order_num FROM categories cat
										inner join course_grading_periods_categories cgpc on cat.id = cgpc.category_id and cgpc.deleted_at is null
										inner join courses_grading_periods cgp on cgp.id =  cgpc.courses_grading_period_id and cgp.deleted_at is null
										inner join grading_periods gp on gp.id = cgp.grading_period_id
										inner join courses on courses.id = cgp.course_id and courses.deleted_at is null
										where cat.deleted_at is null
									)c
									on b.qur_id=c.grading_period_id and c.crs_id=b.course_id and c.id = b.category_id
							)d
						group by  d.student_id, d.student_name, d.category_id, d.quar_name, d.course_id
								 , d.category_name, d.category_weight, d.order_num, d.cgp_id, d.parent_id,d.qur_id,d.status
                                    
							)d
						group by  d.student_id, d.student_name, d.category_id, d.quar_name, d.course_id
								 , d.category_name, d.category_weight, d.order_num, d.cgp_id, d.parent_id,d.qur_id, d.status
					)e
				)f
		)z  
		
	INNER JOIN courses on z.course_id = courses.id
	inner join
	(SELECT /*+ NO_BNL() */ csg.student_id as student_id, cg.name as class_name, levels.level_code AS level_code, courses.hide as hide_num, courses.calculated_in_total
		FROM student_course_groups csg
		inner join course_groups cg on csg.course_group_id=cg.id and cg.deleted_at is null
		inner join courses on cg.course_id= courses.id and courses.deleted_at is null
		inner join levels on courses.level_id=levels.id and levels.deleted_at is null
		where csg.deleted_at is null
		and courses.hide = "false"
		 
		group by student_id, class_name, level_code
		) d on d.student_id = z.student_id
		
	
)
x
where x.status =0

group by  x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num
		, x.parent_id, x.name, x.class_name, x.level_code, x.hide_num
		, PARENT_CATEGORY_WEIGHT
		,x.cgp_id, x.qur_id, x.status
order by  x.level_code,x.quar_name, x.student_id,x.course_id,x.order_num
)y 
on z.student_id=y.student_id 
and z.course_id =y.course_id
and z.parent_id =y.parent_id
and z.qur_id =y.qur_id
and z.cgp_id =y.cgp_id

where y.status is null
and z.student_id=x.student_id 
and z.course_id =x.course_id
and z.qur_id =x.qur_id
and z.cgp_id =x.cgp_id

group by 
  z.student_id
, z.course_id
, z.qur_id 
, z.cgp_id 


	 ) AS west_weight

from  -- (X)

	(select /*+ NO_BNL() */ z.*, courses.name, d.class_name, d.level_code, d.hide_num 
	
	  from -- (Z)
	  
		(select /*+ NO_BNL() */ f.student_id, f.student_name, f.course_id, f.quar_name, f.qur_id, f.order_num,f.category_name,f.category_weight, f.max_grade,
				if(f.parent_id IS NULL,f.category_id,f.parent_id) AS parent_id,IF(f.full_grade IS NULL,0,f.full_grade) AS full_grade, f.cgp_id
                ,(IF(f.full_grade IS NULL,0,f.full_grade)*(f.category_weight *(select /*+ NO_BNL() */ weight from  course_grading_periods_categories where category_id = if(f.parent_id IS NULL,f.category_id,f.parent_id) and courses_grading_period_id = f.cgp_id limit 1))
                /(select  /*+ NO_BNL() */ sum(weight) from course_grading_periods_categories where category_id IN (select /*+ NO_BNL() */ id from categories where id = f.new_cat)
					and deleted_at is null and courses_grading_period_id= f.cgp_id ))/IF (f.category_weight is null , 0 ,f.category_weight) AS category_grade
                
				
		  from  -- (F)
		 
				(select  /*+ NO_BNL() */ e.*,(e.grade*e.category_weight)/e.max_grade AS full_grade , if(e.parent_id IS NULL,e.category_id,e.parent_id) as new_cat
				
				 from  -- (E)


					(select /*+ NO_BNL() */ d.student_id, d.student_name, d.category_id, d.category_name, d.parent_id, d.course_id, d.quar_name, d.qur_id
							,sum(d.grade) AS grade, sum(d.max_grade) AS max_grade, d.category_weight AS category_weight, d.order_num, d.cgp_id
							
					 from  -- (D)
						
							(select /*+ NO_BNL() */ * 
							
							  from -- (B)
								
								(SELECT  /*+ NO_BNL() */ DISTINCT students.id AS student_id,
										users.name AS student_name,
										assignments.id AS item_id,
									   'assignment' AS item_type,
										assignments.name AS item_name,
										IF(st_sub_assi.student_status = 1,0,assignments.points) AS max_grade,
										st_sub_assi.id AS submission_id,
										st_sub_assi.student_status AS status,
										IF(st_sub_assi.student_status = 1,0,IF(st_sub_assi.grade IS NULL, 0, st_sub_assi.grade)) AS grade,
										assignments.category_id AS category_id,
										categories.name AS category_name, 
										cg.course_id, 
										c_gp_cat.weight AS category_weight,
										assi_cg.hide_grade AS hide_grade, 
										c_gp.grading_period_id AS qur_id,
										categories.parent_id AS parent_id,
										c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL AND students.id = $P{ST_ID}
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN assignments_course_groups assi_cg on assi_cg.course_group_id = cg.id AND assi_cg.deleted_at IS NULL
										LEFT OUTER JOIN assignments on assignments.id = assi_cg.assignment_id AND assignments.deleted_at IS NULL
										LEFT OUTER JOIN student_submitted_assignments st_sub_assi on st_sub_assi.student_id = students.id AND st_sub_assi.assignment_id = assignments.id 
										AND st_sub_assi.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = assignments.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id 
										AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where   assignments.grading_period_id = c_gp.grading_period_id 
										AND cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												quizzes.id AS item_id, 
												'quiz' AS item_type, 
												quizzes.name AS item_name,
												IF(quiz_sub.student_status = 1,0,quizzes.total_score) AS max_grade, 
												quiz_sub.id AS submission_id, 
												quiz_sub.student_status AS status,
												IF(quiz_sub.student_status = 1,0,IF(quiz_sub.score IS NULL, 0, quiz_sub.score)) AS grade, 
												quizzes.category_id AS category_id, 
												categories.name AS category_name,
												cg.course_id,
												c_gp_cat.weight AS category_weight, 		         		         
												quiz_cg.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL AND students.id = $P{ST_ID}
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN course_groups_quizzes quiz_cg on quiz_cg.course_group_id = cg.id AND quiz_cg.deleted_at IS NULL
										LEFT OUTER JOIN quizzes on quizzes.id = quiz_cg.quiz_id AND quizzes.deleted_at IS NULL
										LEFT OUTER JOIN quiz_submissions quiz_sub on quiz_sub.student_id = students.id AND quiz_sub.quiz_id = quizzes.id
										  AND quiz_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = quizzes.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id 
														AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id 
													AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
													
										WHERE quizzes.grading_period_id = c_gp.grading_period_id
												AND  cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												grade_items.id AS item_id, 
												'grade_item' AS item_type,
												grade_items.name as item_name, 
												IF(g_sub.student_status = 1,0,grade_items.max_grade) AS max_grade, 
												g_sub.id AS submission_id,
												g_sub.student_status AS status, 
												IF(g_sub.student_status = 1,0,IF(g_sub.grade IS NULL, 0 , g_sub.grade)) AS grade,
												grade_items.category_id AS category_id,		              
												categories.name AS category_name , 
												cg.course_id, 		  
												c_gp_cat.weight AS category_weight, 
												grade_items.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL AND students.id = $P{ST_ID}
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN grade_items on grade_items.course_group_id = cg.id AND grade_items.deleted_at IS NULL
										LEFT OUTER JOIN grade_submissions g_sub on g_sub.student_id = students.id AND g_sub.grade_item_id = grade_items.id
										  AND g_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = grade_items.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id 
										  AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where  grade_items.grading_period_id = c_gp.grading_period_id 
										AND   cg.deleted_at IS NULL
										)b
									left join -- (C)
									(
										SELECT /*+ NO_BNL() */ distinct cat.id, cat.name, cgp.course_id AS crs_id, cgpc.weight, cgpc.courses_grading_period_id, cgp.grading_period_id, gp.name AS quar_name, 
										courses.order AS order_num FROM categories cat
										inner join course_grading_periods_categories cgpc on cat.id = cgpc.category_id and cgpc.deleted_at is null
										inner join courses_grading_periods cgp on cgp.id =  cgpc.courses_grading_period_id and cgp.deleted_at is null
										inner join grading_periods gp on gp.id = cgp.grading_period_id
										inner join courses on courses.id = cgp.course_id and courses.deleted_at is null
										where cat.deleted_at is null
									)c
									on b.qur_id=c.grading_period_id and c.crs_id=b.course_id and c.id = b.category_id
							)d
						group by  d.student_id, d.student_name, d.category_id, d.quar_name, d.course_id
								 , d.category_name, d.category_weight, d.order_num, d.cgp_id, d.parent_id,d.qur_id
					)e
				)f
		)z  
		
	INNER JOIN courses on z.course_id = courses.id and courses.hide = "false" and courses.calculated_in_total=1
		 
	inner join
	(SELECT /*+ NO_BNL() */ csg.student_id as student_id, cg.name as class_name, levels.level_code AS level_code, courses.hide as hide_num, courses.calculated_in_total
		FROM student_course_groups csg
		inner join course_groups cg on csg.course_group_id=cg.id and cg.deleted_at is null
		inner join courses on cg.course_id= courses.id and courses.deleted_at is null
		inner join levels on courses.level_id=levels.id and levels.deleted_at is null
		where csg.deleted_at is null		
		AND csg.student_id  = $P{ST_ID}
		and courses.hide = "false"
		and courses.calculated_in_total=1
		group by student_id, class_name, level_code
		) d on d.student_id = z.student_id
		
	
)
x


group by  x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num
		, x.parent_id, x.name, x.class_name, x.level_code, x.hide_num
		, PARENT_CATEGORY_WEIGHT
		,x.cgp_id, x.qur_id 
		
)z
group by
z.student_id, z.student_name, z.course_id, z.quar_name, z.order_num
, z.name, z.class_name, z.level_code, z.hide_num, z.user_name,z.Home_address,z.secion_name
, z.west_weight,z.main_period_wight,z.main_pirod_name, z.cal_in_total, z.qur_id,z.sub_period_weight,total_grade

order by z.level_code, z.student_name , z.cal_in_total DESC , z.quar_name , z.order_num
)v
group by v.quar_name]]>
		</queryString>
		<field name="student_id" class="java.lang.Integer">
			<property name="com.jaspersoft.studio.field.label" value="student_id"/>
		</field>
		<field name="student_name" class="java.lang.String">
			<property name="com.jaspersoft.studio.field.label" value="student_name"/>
		</field>
		<field name="quar_name" class="java.lang.String">
			<property name="com.jaspersoft.studio.field.label" value="quar_name"/>
		</field>
		<field name="sum(v.full_grade)/count(v.full_grade)" class="java.lang.Double">
			<property name="com.jaspersoft.studio.field.label" value="sum(v.full_grade)/count(v.full_grade)"/>
		</field>
	</subDataset>
	<parameter name="REPORT_NAME" class="java.lang.String" isForPrompting="false">
		<defaultValueExpression><![CDATA["SEMESTER"]]></defaultValueExpression>
	</parameter>
	<parameter name="ABSOLUTE_PATH" class="java.lang.String" isForPrompting="false">
		<defaultValueExpression><![CDATA["C:\\Users\\wifi\\Desktop\\skolera project\\SReport\\web\\WEB-INF\\KLSLMS\\"]]></defaultValueExpression>
	</parameter>
	<parameter name="STUDENT_ID" class="java.lang.String">
		<defaultValueExpression><![CDATA["-1"]]></defaultValueExpression>
	</parameter>
	<parameter name="LETTER_ID" class="java.lang.String"/>
	<parameter name="MAP" class="java.util.HashMap" isForPrompting="false">
		<defaultValueExpression><![CDATA[new java.util.HashMap()]]></defaultValueExpression>
	</parameter>
	<parameter name="DB_NAME" class="java.lang.String">
		<defaultValueExpression><![CDATA["cbc"]]></defaultValueExpression>
	</parameter>
	<parameter name="GRADING_PERIOD_ID" class="java.lang.String">
		<defaultValueExpression><![CDATA["-1"]]></defaultValueExpression>
	</parameter>
	<parameter name="CLASS_NAME" class="java.lang.String">
		<defaultValueExpression><![CDATA["-1"]]></defaultValueExpression>
	</parameter>
	<parameter name="LEVEL_CODE" class="java.lang.String">
		<defaultValueExpression><![CDATA["-1"]]></defaultValueExpression>
	</parameter>
	<queryString>
		<![CDATA[select
  /*+ NO_BNL() */
  z.student_id, z.student_name, z.course_id, z.quar_name, z.order_num
, z.name, z.class_name, z.level_code, z.hide_num, z.user_name,z.Home_address,z.secion_name
, z.west_weight,z.main_period_wight,z.main_pirod_name, z.cal_in_total, z.qur_id,z.sub_period_weight
, sum(IF ((select  /*+ NO_BNL() */ id from categories where parent_id = z.parent_id  and deleted_at is null limit 1) is null,z.full_grade1 , IF(z.full_grade1 is null,0,z.full_grade1) * z.PARENT_CATEGORY_WEIGHT/100)) AS full_grade
, (select  /*+ NO_BNL() */ total_grade from courses where id = z.course_id) AS total_grade


from -- (Z)
(select 
    /*+ NO_BNL() */
	x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num, x.parent_id,
	x.name, x.class_name, x.level_code, x.hide_num
     , (SELECT  /*+ NO_BNL() */ distinct username FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS user_name
     , (SELECT  /*+ NO_BNL() */ distinct home_address FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS Home_address
	 , (select /*+ NO_BNL() */ name from categories where id = x.parent_id) AS category_name
	 ,(SELECT /*+ NO_BNL() */ name FROM sections where id = (select section_id from stages where id = (select stage_id from levels where level_code = x.level_code and deleted_at is null) and deleted_at is null) and deleted_at is null ) as secion_name
	 , (select /*+ NO_BNL() */ weight from course_grading_periods_categories where category_id = x.parent_id and courses_grading_period_id = x.cgp_id LIMIT 1) PARENT_CATEGORY_WEIGHT
	 , SUM(x.category_grade) AS full_grade1
     , x.qur_id
	 , IF((SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */ distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1) is null,100,(SELECT /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1)) AS main_period_wight
     , (SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = x.qur_id and course_id = x.course_id limit 1) AS sub_period_weight
	 , if((SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) is null ,x.quar_name, (SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) ) AS main_pirod_name
     , x.cgp_id
     ,(select  /*+ NO_BNL() */ calculated_in_total from courses where id = x.course_id) AS cal_in_total
     ,(
		select
	 /*+ NO_BNL() */ 
	 IF(sum(z.PARENT_CATEGORY_WEIGHT) is null,0,sum(z.PARENT_CATEGORY_WEIGHT)) AS weight from (
select 
    /*+ NO_BNL() */
	x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num, x.parent_id,
	x.name, x.class_name, x.level_code, x.hide_num
     , (SELECT  /*+ NO_BNL() */ distinct username FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS user_name
     , (SELECT  /*+ NO_BNL() */ distinct home_address FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS Home_address
	 , (select /*+ NO_BNL() */ name from categories where id = x.parent_id) AS category_name
	 , (select /*+ NO_BNL() */ weight from course_grading_periods_categories where category_id = x.parent_id and courses_grading_period_id = x.cgp_id LIMIT 1) PARENT_CATEGORY_WEIGHT
	 , SUM(x.category_grade) AS full_grade1
     , x.qur_id
	 , IF((SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */ distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1) is null,100,(SELECT /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1)) AS main_period_wight
     , (SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = x.qur_id and course_id = x.course_id limit 1) AS sub_period_weight
	 , if((SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) is null ,x.quar_name, (SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) ) AS main_pirod_name
     , x.cgp_id
     , IF(x.status is null ,0,x.status) AS status

from  -- (X)

	(select /*+ NO_BNL() */ z.*, courses.name, d.class_name, d.level_code, d.hide_num 
	
	  from -- (Z)
	  
		(select /*+ NO_BNL() */ f.student_id, f.student_name, f.course_id, f.quar_name, f.qur_id, f.order_num,f.category_name,f.category_weight, f.max_grade,
				if(f.parent_id IS NULL,f.category_id,f.parent_id) AS parent_id,IF(f.full_grade IS NULL,0,f.full_grade) AS full_grade, f.cgp_id
                ,(IF(f.full_grade IS NULL,0,f.full_grade)*(f.category_weight *(select /*+ NO_BNL() */ weight from  course_grading_periods_categories where category_id = if(f.parent_id IS NULL,f.category_id,f.parent_id) and courses_grading_period_id = f.cgp_id limit 1))
                /(select  /*+ NO_BNL() */ sum(weight) from course_grading_periods_categories where category_id IN (select /*+ NO_BNL() */ id from categories where id = f.new_cat)
					and deleted_at is null and courses_grading_period_id= f.cgp_id ))/IF (f.category_weight is null , 0 ,f.category_weight) AS category_grade
                    , f.status
                
				
		  from  -- (F)
		 
				(select  /*+ NO_BNL() */ e.*,(e.grade*e.category_weight)/e.max_grade AS full_grade , if(e.parent_id IS NULL,e.category_id,e.parent_id) as new_cat
				
				 from  -- (E)


					(select /*+ NO_BNL() */ d.student_id, d.student_name, d.category_id, d.category_name, d.parent_id, d.course_id, d.quar_name, d.qur_id
							,sum(d.grade) AS grade, sum(d.max_grade) AS max_grade, d.category_weight AS category_weight, d.order_num, d.cgp_id , d.status
							
					 from  -- (D)
						
							(select /*+ NO_BNL() */ d.student_id, d.student_name, d.category_id, d.category_name, d.parent_id, d.course_id, d.quar_name, d.qur_id
							,sum(d.grade) AS grade, sum(d.max_grade) AS max_grade, d.category_weight AS category_weight, d.order_num, d.cgp_id, d.status
							
					 from  -- (D)
						
							(select /*+ NO_BNL() */ * 
							
							  from -- (B)
								
								(SELECT  /*+ NO_BNL() */ DISTINCT students.id AS student_id,
										users.name AS student_name,
										assignments.id AS item_id,
									   'assignment' AS item_type,
										assignments.name AS item_name,
										IF(st_sub_assi.student_status = 1,0,assignments.points) AS max_grade,
										st_sub_assi.id AS submission_id,
										if(st_sub_assi.student_status = 2, 0, st_sub_assi.student_status) AS status,
										IF(st_sub_assi.student_status = 1,0,IF(st_sub_assi.grade IS NULL, 0, st_sub_assi.grade)) AS grade,
										assignments.category_id AS category_id,
										categories.name AS category_name, 
										cg.course_id, 
										c_gp_cat.weight AS category_weight,
										assi_cg.hide_grade AS hide_grade, 
										c_gp.grading_period_id AS qur_id,
										categories.parent_id AS parent_id,
										c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL and (students.id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1") 
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN assignments_course_groups assi_cg on assi_cg.course_group_id = cg.id AND assi_cg.deleted_at IS NULL
										LEFT OUTER JOIN assignments on assignments.id = assi_cg.assignment_id AND assignments.deleted_at IS NULL
										LEFT OUTER JOIN student_submitted_assignments st_sub_assi on st_sub_assi.student_id = students.id AND st_sub_assi.assignment_id = assignments.id 
										AND st_sub_assi.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = assignments.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id AND (c_gp.grading_period_id in ($P!{GRADING_PERIOD_ID}) OR $P{GRADING_PERIOD_ID}  = "-1")
										AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where   assignments.grading_period_id = c_gp.grading_period_id 
										AND cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												quizzes.id AS item_id, 
												'quiz' AS item_type, 
												quizzes.name AS item_name,
												IF(quiz_sub.student_status = 1,0,quizzes.total_score) AS max_grade, 
												quiz_sub.id AS submission_id, 
												if(quiz_sub.student_status=2, 0, quiz_sub.student_status) AS status,
												IF(quiz_sub.student_status = 1,0,IF(quiz_sub.score IS NULL, 0, quiz_sub.score)) AS grade, 
												quizzes.category_id AS category_id, 
												categories.name AS category_name,
												cg.course_id,
												c_gp_cat.weight AS category_weight, 		         		         
												quiz_cg.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL and (students.id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1") and (students.id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1")
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN course_groups_quizzes quiz_cg on quiz_cg.course_group_id = cg.id AND quiz_cg.deleted_at IS NULL
										LEFT OUTER JOIN quizzes on quizzes.id = quiz_cg.quiz_id AND quizzes.deleted_at IS NULL
										LEFT OUTER JOIN quiz_submissions quiz_sub on quiz_sub.student_id = students.id AND quiz_sub.quiz_id = quizzes.id
										  AND quiz_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = quizzes.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id 
														AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id AND (c_gp.grading_period_id in ($P!{GRADING_PERIOD_ID}) OR $P{GRADING_PERIOD_ID}  = "-1")
													AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
													
										WHERE quizzes.grading_period_id = c_gp.grading_period_id
												AND  cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												grade_items.id AS item_id, 
												'grade_item' AS item_type,
												grade_items.name as item_name, 
												IF(g_sub.student_status = 1,0,grade_items.max_grade) AS max_grade, 
												g_sub.id AS submission_id,
												if(g_sub.student_status = 2,0,g_sub.student_status) AS status, 
												IF(g_sub.student_status = 1,0,IF(g_sub.grade IS NULL, 0 , g_sub.grade)) AS grade,
												grade_items.category_id AS category_id,		              
												categories.name AS category_name , 
												cg.course_id, 		  
												c_gp_cat.weight AS category_weight, 
												grade_items.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL and (students.id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1")
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN grade_items on grade_items.course_group_id = cg.id AND grade_items.deleted_at IS NULL
										LEFT OUTER JOIN grade_submissions g_sub on g_sub.student_id = students.id AND g_sub.grade_item_id = grade_items.id
										  AND g_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = grade_items.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id AND (c_gp.grading_period_id in ($P!{GRADING_PERIOD_ID}) OR $P{GRADING_PERIOD_ID}  = "-1")
										  AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where  grade_items.grading_period_id = c_gp.grading_period_id 
										AND   cg.deleted_at IS NULL
										)b
									left join -- (C)
									(
										SELECT /*+ NO_BNL() */ distinct cat.id, cat.name, cgp.course_id AS crs_id, cgpc.weight, cgpc.courses_grading_period_id, cgp.grading_period_id, gp.name AS quar_name, 
										courses.order AS order_num FROM categories cat
										inner join course_grading_periods_categories cgpc on cat.id = cgpc.category_id and cgpc.deleted_at is null
										inner join courses_grading_periods cgp on cgp.id =  cgpc.courses_grading_period_id and cgp.deleted_at is null
										inner join grading_periods gp on gp.id = cgp.grading_period_id
										inner join courses on courses.id = cgp.course_id and courses.deleted_at is null
										where cat.deleted_at is null
									)c
									on b.qur_id=c.grading_period_id and c.crs_id=b.course_id and c.id = b.category_id
							)d
						group by  d.student_id, d.student_name, d.category_id, d.quar_name, d.course_id
								 , d.category_name, d.category_weight, d.order_num, d.cgp_id, d.parent_id,d.qur_id,d.status
                                    
							)d
						group by  d.student_id, d.student_name, d.category_id, d.quar_name, d.course_id
								 , d.category_name, d.category_weight, d.order_num, d.cgp_id, d.parent_id,d.qur_id, d.status
					)e
				)f
		)z  
		
	INNER JOIN courses on z.course_id = courses.id
	inner join
	(SELECT /*+ NO_BNL() */ csg.student_id as student_id, cg.name as class_name, levels.level_code AS level_code, courses.hide as hide_num, courses.calculated_in_total
		FROM student_course_groups csg
		inner join course_groups cg on csg.course_group_id=cg.id and cg.deleted_at is null
		inner join courses on cg.course_id= courses.id and courses.deleted_at is null
		inner join levels on courses.level_id=levels.id and levels.deleted_at is null
		where csg.deleted_at is null
		and courses.hide = "false"
		and (csg.student_id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1")
		 
		group by student_id, class_name, level_code
		) d on d.student_id = z.student_id
		
	
)
x

where x.status =1

group by  x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num
		, x.parent_id, x.name, x.class_name, x.level_code, x.hide_num
		, PARENT_CATEGORY_WEIGHT
		,x.cgp_id, x.qur_id, x.status
order by  x.level_code,x.quar_name, x.student_id,x.course_id,x.order_num
)z

left outer join 

(

select 
    /*+ NO_BNL() */
	x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num, x.parent_id,
	x.name, x.class_name, x.level_code, x.hide_num
     , (SELECT  /*+ NO_BNL() */ distinct username FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS user_name
     , (SELECT  /*+ NO_BNL() */ distinct home_address FROM users where actable_id = x.student_id and deleted_at is null LIMIT 1) AS Home_address
	 , (select /*+ NO_BNL() */ name from categories where id = x.parent_id) AS category_name
	 , (select /*+ NO_BNL() */ weight from course_grading_periods_categories where category_id = x.parent_id and courses_grading_period_id = x.cgp_id LIMIT 1) PARENT_CATEGORY_WEIGHT
	 ,(SELECT name FROM sections where id = (select section_id from stages where id = (select stage_id from levels where level_code =x.level_code  and deleted_at is null) and deleted_at is null) and deleted_at is null) AS section_name
	 , SUM(x.category_grade) AS full_grade1
     , x.qur_id
	 , IF((SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */ distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1) is null,100,(SELECT /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = (select  /*+ NO_BNL() */distinct parent_id from grading_periods where id = x.qur_id ) and course_id = x.course_id limit 1)) AS main_period_wight
     , (SELECT  /*+ NO_BNL() */ distinct weight FROM courses_grading_periods where grading_period_id = x.qur_id and course_id = x.course_id limit 1) AS sub_period_weight
	 , if((SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) is null ,x.quar_name, (SELECT  /*+ NO_BNL() */ distinct name FROM grading_periods where id = (select  /*+ NO_BNL() */ parent_id from grading_periods where id =x.qur_id)) ) AS main_pirod_name
     , x.cgp_id
     , IF(x.status is null ,0,x.status) AS status

from  -- (X)

	(select /*+ NO_BNL() */ z.*, courses.name, d.class_name, d.level_code, d.hide_num 
	
	  from -- (Z)
	  
		(select /*+ NO_BNL() */ f.student_id, f.student_name, f.course_id, f.quar_name, f.qur_id, f.order_num,f.category_name,f.category_weight, f.max_grade,
				if(f.parent_id IS NULL,f.category_id,f.parent_id) AS parent_id,IF(f.full_grade IS NULL,0,f.full_grade) AS full_grade, f.cgp_id
                ,(IF(f.full_grade IS NULL,0,f.full_grade)*(f.category_weight *(select /*+ NO_BNL() */ weight from  course_grading_periods_categories where category_id = if(f.parent_id IS NULL,f.category_id,f.parent_id) and courses_grading_period_id = f.cgp_id limit 1))
                /(select  /*+ NO_BNL() */ sum(weight) from course_grading_periods_categories where category_id IN (select /*+ NO_BNL() */ id from categories where id = f.new_cat)
					and deleted_at is null and courses_grading_period_id= f.cgp_id ))/IF (f.category_weight is null , 0 ,f.category_weight) AS category_grade
                    , f.status
                
				
		  from  -- (F)
		 
				(select  /*+ NO_BNL() */ e.*,(e.grade*e.category_weight)/e.max_grade AS full_grade , if(e.parent_id IS NULL,e.category_id,e.parent_id) as new_cat
				
				 from  -- (E)


					(select /*+ NO_BNL() */ d.student_id, d.student_name, d.category_id, d.category_name, d.parent_id, d.course_id, d.quar_name, d.qur_id
							,sum(d.grade) AS grade, sum(d.max_grade) AS max_grade, d.category_weight AS category_weight, d.order_num, d.cgp_id , d.status
							
					 from  -- (D)
						
							(select /*+ NO_BNL() */ d.student_id, d.student_name, d.category_id, d.category_name, d.parent_id, d.course_id, d.quar_name, d.qur_id
							,sum(d.grade) AS grade, sum(d.max_grade) AS max_grade, d.category_weight AS category_weight, d.order_num, d.cgp_id, d.status
							
					 from  -- (D)
						
							(select /*+ NO_BNL() */ * 
							
							  from -- (B)
								
								(SELECT  /*+ NO_BNL() */ DISTINCT students.id AS student_id,
										users.name AS student_name,
										assignments.id AS item_id,
									   'assignment' AS item_type,
										assignments.name AS item_name,
										IF(st_sub_assi.student_status = 1,0,assignments.points) AS max_grade,
										st_sub_assi.id AS submission_id,
										if(st_sub_assi.student_status = 2  , 0, st_sub_assi.student_status) AS status,
										IF(st_sub_assi.student_status = 1,0,IF(st_sub_assi.grade IS NULL, 0, st_sub_assi.grade)) AS grade,
										assignments.category_id AS category_id,
										categories.name AS category_name, 
										cg.course_id, 
										c_gp_cat.weight AS category_weight,
										assi_cg.hide_grade AS hide_grade, 
										c_gp.grading_period_id AS qur_id,
										categories.parent_id AS parent_id,
										c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL and (students.id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1")
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN assignments_course_groups assi_cg on assi_cg.course_group_id = cg.id AND assi_cg.deleted_at IS NULL
										LEFT OUTER JOIN assignments on assignments.id = assi_cg.assignment_id AND assignments.deleted_at IS NULL
										LEFT OUTER JOIN student_submitted_assignments st_sub_assi on st_sub_assi.student_id = students.id AND st_sub_assi.assignment_id = assignments.id 
										AND st_sub_assi.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = assignments.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id AND (c_gp.grading_period_id in ($P!{GRADING_PERIOD_ID}) OR $P{GRADING_PERIOD_ID}  = "-1")
										AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where   assignments.grading_period_id = c_gp.grading_period_id 
										AND cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												quizzes.id AS item_id, 
												'quiz' AS item_type, 
												quizzes.name AS item_name,
												IF(quiz_sub.student_status = 1,0,quizzes.total_score) AS max_grade, 
												quiz_sub.id AS submission_id, 
												if(quiz_sub.student_status=2, 0, quiz_sub.student_status) AS status,
												IF(quiz_sub.student_status = 1,0,IF(quiz_sub.score IS NULL, 0, quiz_sub.score)) AS grade, 
												quizzes.category_id AS category_id, 
												categories.name AS category_name,
												cg.course_id,
												c_gp_cat.weight AS category_weight, 		         		         
												quiz_cg.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL and (students.id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1")
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN course_groups_quizzes quiz_cg on quiz_cg.course_group_id = cg.id AND quiz_cg.deleted_at IS NULL
										LEFT OUTER JOIN quizzes on quizzes.id = quiz_cg.quiz_id AND quizzes.deleted_at IS NULL
										LEFT OUTER JOIN quiz_submissions quiz_sub on quiz_sub.student_id = students.id AND quiz_sub.quiz_id = quizzes.id
										  AND quiz_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = quizzes.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id 
														AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id AND (c_gp.grading_period_id in ($P!{GRADING_PERIOD_ID}) OR $P{GRADING_PERIOD_ID}  = "-1")
													AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
													
										WHERE quizzes.grading_period_id = c_gp.grading_period_id
												AND  cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												grade_items.id AS item_id, 
												'grade_item' AS item_type,
												grade_items.name as item_name, 
												IF(g_sub.student_status = 1,0,grade_items.max_grade) AS max_grade, 
												g_sub.id AS submission_id,
												if(g_sub.student_status = 2,0,g_sub.student_status) AS status, 
												IF(g_sub.student_status = 1,0,IF(g_sub.grade IS NULL, 0 , g_sub.grade)) AS grade,
												grade_items.category_id AS category_id,		              
												categories.name AS category_name , 
												cg.course_id, 		  
												c_gp_cat.weight AS category_weight, 
												grade_items.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL and (students.id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1")
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN grade_items on grade_items.course_group_id = cg.id AND grade_items.deleted_at IS NULL
										LEFT OUTER JOIN grade_submissions g_sub on g_sub.student_id = students.id AND g_sub.grade_item_id = grade_items.id
										  AND g_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = grade_items.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id AND (c_gp.grading_period_id in ($P!{GRADING_PERIOD_ID}) OR $P{GRADING_PERIOD_ID}  = "-1")
										  AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where  grade_items.grading_period_id = c_gp.grading_period_id 
										AND   cg.deleted_at IS NULL
										)b
									left join -- (C)
									(
										SELECT /*+ NO_BNL() */ distinct cat.id, cat.name, cgp.course_id AS crs_id, cgpc.weight, cgpc.courses_grading_period_id, cgp.grading_period_id, gp.name AS quar_name, 
										courses.order AS order_num FROM categories cat
										inner join course_grading_periods_categories cgpc on cat.id = cgpc.category_id and cgpc.deleted_at is null
										inner join courses_grading_periods cgp on cgp.id =  cgpc.courses_grading_period_id and cgp.deleted_at is null
										inner join grading_periods gp on gp.id = cgp.grading_period_id
										inner join courses on courses.id = cgp.course_id and courses.deleted_at is null
										where cat.deleted_at is null
									)c
									on b.qur_id=c.grading_period_id and c.crs_id=b.course_id and c.id = b.category_id
							)d
						group by  d.student_id, d.student_name, d.category_id, d.quar_name, d.course_id
								 , d.category_name, d.category_weight, d.order_num, d.cgp_id, d.parent_id,d.qur_id,d.status
                                    
							)d
						group by  d.student_id, d.student_name, d.category_id, d.quar_name, d.course_id
								 , d.category_name, d.category_weight, d.order_num, d.cgp_id, d.parent_id,d.qur_id, d.status
					)e
				)f
		)z  
		
	INNER JOIN courses on z.course_id = courses.id
	inner join
	(SELECT /*+ NO_BNL() */ csg.student_id as student_id, cg.name as class_name, levels.level_code AS level_code, courses.hide as hide_num, courses.calculated_in_total
		FROM student_course_groups csg
		inner join course_groups cg on csg.course_group_id=cg.id and cg.deleted_at is null
		inner join courses on cg.course_id= courses.id and courses.deleted_at is null
		inner join levels on courses.level_id=levels.id and levels.deleted_at is null
		where csg.deleted_at is null
		and courses.hide = "false"
		 
		group by student_id, class_name, level_code
		) d on d.student_id = z.student_id
		
	
)
x
where x.status =0

group by  x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num
		, x.parent_id, x.name, x.class_name, x.level_code, x.hide_num
		, PARENT_CATEGORY_WEIGHT
		,x.cgp_id, x.qur_id, x.status
order by  x.level_code,x.quar_name, x.student_id,x.course_id,x.order_num
)y 
on z.student_id=y.student_id 
and z.course_id =y.course_id
and z.parent_id =y.parent_id
and z.qur_id =y.qur_id
and z.cgp_id =y.cgp_id

where y.status is null
and z.student_id=x.student_id 
and z.course_id =x.course_id
and z.qur_id =x.qur_id
and z.cgp_id =x.cgp_id

group by 
  z.student_id
, z.course_id
, z.qur_id 
, z.cgp_id 


	 ) AS west_weight

from  -- (X)

	(select /*+ NO_BNL() */ z.*, courses.name, d.class_name, d.level_code, d.hide_num 
	
	  from -- (Z)
	  
		(select /*+ NO_BNL() */ f.student_id, f.student_name, f.course_id, f.quar_name, f.qur_id, f.order_num,f.category_name,f.category_weight, f.max_grade,
				if(f.parent_id IS NULL,f.category_id,f.parent_id) AS parent_id,IF(f.full_grade IS NULL,0,f.full_grade) AS full_grade, f.cgp_id
                ,(IF(f.full_grade IS NULL,0,f.full_grade)*(f.category_weight *(select /*+ NO_BNL() */ weight from  course_grading_periods_categories where category_id = if(f.parent_id IS NULL,f.category_id,f.parent_id) and courses_grading_period_id = f.cgp_id limit 1))
                /(select  /*+ NO_BNL() */ sum(weight) from course_grading_periods_categories where category_id IN (select /*+ NO_BNL() */ id from categories where id = f.new_cat)
					and deleted_at is null and courses_grading_period_id= f.cgp_id ))/IF (f.category_weight is null , 0 ,f.category_weight) AS category_grade
                
				
		  from  -- (F)
		 
				(select  /*+ NO_BNL() */ e.*,(e.grade*e.category_weight)/e.max_grade AS full_grade , if(e.parent_id IS NULL,e.category_id,e.parent_id) as new_cat
				
				 from  -- (E)


					(select /*+ NO_BNL() */ d.student_id, d.student_name, d.category_id, d.category_name, d.parent_id, d.course_id, d.quar_name, d.qur_id
							,sum(d.grade) AS grade, sum(d.max_grade) AS max_grade, d.category_weight AS category_weight, d.order_num, d.cgp_id
							
					 from  -- (D)
						
							(select /*+ NO_BNL() */ * 
							
							  from -- (B)
								
								(SELECT  /*+ NO_BNL() */ DISTINCT students.id AS student_id,
										users.name AS student_name,
										assignments.id AS item_id,
									   'assignment' AS item_type,
										assignments.name AS item_name,
										IF(st_sub_assi.student_status = 1,0,assignments.points) AS max_grade,
										st_sub_assi.id AS submission_id,
										st_sub_assi.student_status AS status,
										IF(st_sub_assi.student_status = 1,0,IF(st_sub_assi.grade IS NULL, 0, st_sub_assi.grade)) AS grade,
										assignments.category_id AS category_id,
										categories.name AS category_name, 
										cg.course_id, 
										c_gp_cat.weight AS category_weight,
										assi_cg.hide_grade AS hide_grade, 
										c_gp.grading_period_id AS qur_id,
										categories.parent_id AS parent_id,
										c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL and (students.id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1")
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN assignments_course_groups assi_cg on assi_cg.course_group_id = cg.id AND assi_cg.deleted_at IS NULL
										LEFT OUTER JOIN assignments on assignments.id = assi_cg.assignment_id AND assignments.deleted_at IS NULL
										LEFT OUTER JOIN student_submitted_assignments st_sub_assi on st_sub_assi.student_id = students.id AND st_sub_assi.assignment_id = assignments.id 
										AND st_sub_assi.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = assignments.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id AND (c_gp.grading_period_id in ($P!{GRADING_PERIOD_ID}) OR $P{GRADING_PERIOD_ID}  = "-1")
										AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where   assignments.grading_period_id = c_gp.grading_period_id 
										AND cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												quizzes.id AS item_id, 
												'quiz' AS item_type, 
												quizzes.name AS item_name,
												IF(quiz_sub.student_status = 1,0,quizzes.total_score) AS max_grade, 
												quiz_sub.id AS submission_id, 
												quiz_sub.student_status AS status,
												IF(quiz_sub.student_status = 1,0,IF(quiz_sub.score IS NULL, 0, quiz_sub.score)) AS grade, 
												quizzes.category_id AS category_id, 
												categories.name AS category_name,
												cg.course_id,
												c_gp_cat.weight AS category_weight, 		         		         
												quiz_cg.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL and (students.id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1")
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN course_groups_quizzes quiz_cg on quiz_cg.course_group_id = cg.id AND quiz_cg.deleted_at IS NULL
										LEFT OUTER JOIN quizzes on quizzes.id = quiz_cg.quiz_id AND quizzes.deleted_at IS NULL
										LEFT OUTER JOIN quiz_submissions quiz_sub on quiz_sub.student_id = students.id AND quiz_sub.quiz_id = quizzes.id
										  AND quiz_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = quizzes.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id 
														AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id AND (c_gp.grading_period_id in ($P!{GRADING_PERIOD_ID}) OR $P{GRADING_PERIOD_ID}  = "-1")
													AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
													
										WHERE quizzes.grading_period_id = c_gp.grading_period_id
												AND  cg.deleted_at IS NULL

										UNION ALL
												SELECT /*+ NO_BNL() */ DISTINCT students.id AS student_id, 
												users.name AS student_name, 
												grade_items.id AS item_id, 
												'grade_item' AS item_type,
												grade_items.name as item_name, 
												IF(g_sub.student_status = 1,0,grade_items.max_grade) AS max_grade, 
												g_sub.id AS submission_id,
												g_sub.student_status AS status, 
												IF(g_sub.student_status = 1,0,IF(g_sub.grade IS NULL, 0 , g_sub.grade)) AS grade,
												grade_items.category_id AS category_id,		              
												categories.name AS category_name , 
												cg.course_id, 		  
												c_gp_cat.weight AS category_weight, 
												grade_items.hide_grade AS hide_grade, 
												c_gp.grading_period_id AS qur_id,
												categories.parent_id AS parent_id,
												c_gp_cat.courses_grading_period_id as cgp_id
										FROM course_groups cg
										LEFT OUTER JOIN student_course_groups st_cg on st_cg.course_group_id = cg.id AND st_cg.deleted_at IS NULL
										LEFT OUTER JOIN students on students.id = st_cg.student_id AND students.deleted_at IS NULL and (students.id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1")
										LEFT OUTER JOIN users on users.actable_type = 'Student' AND users.actable_id = students.id AND users.deleted_at IS NULL
										LEFT OUTER JOIN grade_items on grade_items.course_group_id = cg.id AND grade_items.deleted_at IS NULL
										LEFT OUTER JOIN grade_submissions g_sub on g_sub.student_id = students.id AND g_sub.grade_item_id = grade_items.id
										  AND g_sub.deleted_at IS NULL
										LEFT OUTER JOIN categories on categories.id = grade_items.category_id AND categories.deleted_at IS NULL
										LEFT OUTER JOIN course_grading_periods_categories c_gp_cat on c_gp_cat.category_id = categories.id AND c_gp_cat.deleted_at IS NULL
										INNER JOIN courses_grading_periods c_gp on c_gp.id = c_gp_cat.courses_grading_period_id AND (c_gp.grading_period_id in ($P!{GRADING_PERIOD_ID}) OR $P{GRADING_PERIOD_ID}  = "-1")
										  AND c_gp.course_id = cg.course_id AND c_gp.deleted_at IS NULL
										where  grade_items.grading_period_id = c_gp.grading_period_id 
										AND   cg.deleted_at IS NULL
										)b
									left join -- (C)
									(
										SELECT /*+ NO_BNL() */ distinct cat.id, cat.name, cgp.course_id AS crs_id, cgpc.weight, cgpc.courses_grading_period_id, cgp.grading_period_id, gp.name AS quar_name, 
										courses.order AS order_num FROM categories cat
										inner join course_grading_periods_categories cgpc on cat.id = cgpc.category_id and cgpc.deleted_at is null
										inner join courses_grading_periods cgp on cgp.id =  cgpc.courses_grading_period_id and cgp.deleted_at is null
										inner join grading_periods gp on gp.id = cgp.grading_period_id
										inner join courses on courses.id = cgp.course_id and courses.deleted_at is null
										where cat.deleted_at is null
									)c
									on b.qur_id=c.grading_period_id and c.crs_id=b.course_id and c.id = b.category_id
							)d
						group by  d.student_id, d.student_name, d.category_id, d.quar_name, d.course_id
								 , d.category_name, d.category_weight, d.order_num, d.cgp_id, d.parent_id,d.qur_id
					)e
				)f
		)z  
		
	INNER JOIN courses on z.course_id = courses.id and courses.hide = "false" and courses.calculated_in_total=1
		 
	inner join
	(SELECT /*+ NO_BNL() */ csg.student_id as student_id, cg.name as class_name, levels.level_code AS level_code, courses.hide as hide_num, courses.calculated_in_total
		FROM student_course_groups csg
		inner join course_groups cg on csg.course_group_id=cg.id and cg.deleted_at is null
		inner join courses on cg.course_id= courses.id and courses.deleted_at is null
		inner join levels on courses.level_id=levels.id and levels.deleted_at is null
		where csg.deleted_at is null		
		
		and	 (levels.level_code in ($P!{LEVEL_CODE}) OR $P{LEVEL_CODE}  = "-1")
		
		and (csg.student_id in ($P!{STUDENT_ID}) OR $P{STUDENT_ID}  = "-1")

		and (cg.name in ($P!{CLASS_NAME}) OR $P{CLASS_NAME}  = "-1")
		
		and courses.hide = "false"
		and courses.calculated_in_total=1
		group by student_id, class_name, level_code
		) d on d.student_id = z.student_id
		
	
)
x


group by  x.student_id, x.student_name, x.course_id, x.quar_name, x.order_num
		, x.parent_id, x.name, x.class_name, x.level_code, x.hide_num
		, PARENT_CATEGORY_WEIGHT
		,x.cgp_id, x.qur_id 
		
)z
group by
z.student_id, z.student_name, z.course_id, z.quar_name, z.order_num
, z.name, z.class_name, z.level_code, z.hide_num, z.user_name,z.Home_address,z.secion_name
, z.west_weight,z.main_period_wight,z.main_pirod_name, z.cal_in_total, z.qur_id,z.sub_period_weight,total_grade

order by z.level_code, z.student_name , z.cal_in_total DESC , z.quar_name , z.order_num]]>
	</queryString>
	<field name="student_id" class="java.lang.Integer">
		<property name="com.jaspersoft.studio.field.label" value="student_id"/>
	</field>
	<field name="student_name" class="java.lang.String">
		<property name="com.jaspersoft.studio.field.label" value="student_name"/>
	</field>
	<field name="course_id" class="java.lang.Integer">
		<property name="com.jaspersoft.studio.field.label" value="course_id"/>
	</field>
	<field name="quar_name" class="java.lang.String">
		<property name="com.jaspersoft.studio.field.label" value="quar_name"/>
	</field>
	<field name="order_num" class="java.lang.Integer">
		<property name="com.jaspersoft.studio.field.label" value="order_num"/>
	</field>
	<field name="name" class="java.lang.String">
		<property name="com.jaspersoft.studio.field.label" value="name"/>
	</field>
	<field name="class_name" class="java.lang.String">
		<property name="com.jaspersoft.studio.field.label" value="class_name"/>
	</field>
	<field name="level_code" class="java.lang.String">
		<property name="com.jaspersoft.studio.field.label" value="level_code"/>
	</field>
	<field name="hide_num" class="java.lang.Boolean">
		<property name="com.jaspersoft.studio.field.label" value="hide_num"/>
	</field>
	<field name="user_name" class="java.lang.String">
		<property name="com.jaspersoft.studio.field.label" value="user_name"/>
	</field>
	<field name="Home_address" class="java.lang.String">
		<property name="com.jaspersoft.studio.field.label" value="Home_address"/>
	</field>
	<field name="secion_name" class="java.lang.String">
		<property name="com.jaspersoft.studio.field.label" value="secion_name"/>
	</field>
	<field name="west_weight" class="java.math.BigDecimal">
		<property name="com.jaspersoft.studio.field.label" value="west_weight"/>
	</field>
	<field name="main_period_wight" class="java.math.BigDecimal">
		<property name="com.jaspersoft.studio.field.label" value="main_period_wight"/>
	</field>
	<field name="main_pirod_name" class="java.lang.String">
		<property name="com.jaspersoft.studio.field.label" value="main_pirod_name"/>
	</field>
	<field name="cal_in_total" class="java.lang.Integer">
		<property name="com.jaspersoft.studio.field.label" value="cal_in_total"/>
	</field>
	<field name="qur_id" class="java.lang.Integer">
		<property name="com.jaspersoft.studio.field.label" value="qur_id"/>
	</field>
	<field name="sub_period_weight" class="java.math.BigDecimal">
		<property name="com.jaspersoft.studio.field.label" value="sub_period_weight"/>
	</field>
	<field name="full_grade" class="java.lang.Double">
		<property name="com.jaspersoft.studio.field.label" value="full_grade"/>
	</field>
	<field name="total_grade" class="java.lang.Long">
		<property name="com.jaspersoft.studio.field.label" value="total_grade"/>
	</field>
	<variable name="SCORES" class="java.lang.String"/>
	<group name="ST_GROUP">
		<groupExpression><![CDATA[$F{student_id}]]></groupExpression>
		<groupHeader>
			<band height="62">
				<frame>
					<reportElement x="0" y="10" width="554" height="40" uuid="ee4fdcb3-a239-45b4-b0ab-7a48a2f01a9e"/>
					<box>
						<topPen lineWidth="2.0" lineStyle="Solid" lineColor="#000000"/>
						<leftPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
						<bottomPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
						<rightPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
					</box>
					<staticText>
						<reportElement x="0" y="0" width="80" height="20" uuid="93692991-8bff-4cbf-851f-51bb5b5f9107"/>
						<box>
							<topPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<leftPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<bottomPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<rightPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
						</box>
						<textElement verticalAlignment="Middle">
							<font size="14"/>
						</textElement>
						<text><![CDATA[ Student: ]]></text>
					</staticText>
					<staticText>
						<reportElement x="0" y="20" width="80" height="20" uuid="c3d5075a-d921-4ff7-bba6-b5bcc5632d2e"/>
						<box>
							<topPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<leftPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<bottomPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<rightPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
						</box>
						<textElement verticalAlignment="Middle">
							<font size="14"/>
						</textElement>
						<text><![CDATA[ Grade: ]]></text>
					</staticText>
					<textField>
						<reportElement x="80" y="0" width="270" height="20" uuid="656b4a3d-b400-48b2-a403-776016575552"/>
						<box>
							<topPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<leftPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<bottomPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<rightPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
						</box>
						<textElement textAlignment="Center" verticalAlignment="Middle"/>
						<textFieldExpression><![CDATA[$F{student_name}]]></textFieldExpression>
					</textField>
					<textField>
						<reportElement x="80" y="20" width="220" height="20" uuid="0ceb0678-331d-431a-8f7e-9308b9e276cb"/>
						<box>
							<topPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<leftPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<bottomPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<rightPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
						</box>
						<textElement textAlignment="Center" verticalAlignment="Middle"/>
						<textFieldExpression><![CDATA[$F{level_code}.charAt( 1 )+"" +$F{level_code}.charAt( 2 )]]></textFieldExpression>
					</textField>
					<staticText>
						<reportElement x="350" y="0" width="104" height="20" uuid="f830901a-68f0-47b5-a2b5-e7d9fc0eea14"/>
						<box>
							<topPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<leftPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<bottomPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<rightPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
						</box>
						<textElement textAlignment="Right">
							<font size="14"/>
						</textElement>
						<text><![CDATA[Academic Year:]]></text>
					</staticText>
					<textField>
						<reportElement x="454" y="0" width="100" height="20" uuid="7f47fa56-9c0f-4f5e-ad34-761ec4da8243"/>
						<box>
							<topPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<leftPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<bottomPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<rightPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
						</box>
						<textElement textAlignment="Center" verticalAlignment="Middle"/>
						<textFieldExpression><![CDATA["2019/2020"]]></textFieldExpression>
					</textField>
					<textField evaluationTime="Page">
						<reportElement x="454" y="20" width="100" height="20" uuid="c4ff696a-ffe4-42f3-ad87-7795893ebb30"/>
						<box>
							<topPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<leftPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<bottomPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<rightPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
						</box>
						<textElement textAlignment="Center" verticalAlignment="Middle"/>
						<textFieldExpression><![CDATA[Utils.calculateGrade(((new Double(T($P{MAP}.get("TOTAL_GRADE")))/new Double(T($P{MAP}.get("QUAR_NUM")))) /new Double(T($P{MAP}.get("SUB_NUM")))),100,T($P{MAP}.get("scores")))]]></textFieldExpression>
					</textField>
					<staticText>
						<reportElement x="300" y="20" width="154" height="20" uuid="25067bd6-d654-4267-aa0a-641a2f9c331c"/>
						<box>
							<topPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<leftPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<bottomPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
							<rightPen lineWidth="1.0" lineStyle="Solid" lineColor="#000000"/>
						</box>
						<textElement textAlignment="Right">
							<font size="14"/>
						</textElement>
						<text><![CDATA[Academic Standin:]]></text>
					</staticText>
				</frame>
			</band>
		</groupHeader>
		<groupFooter>
			<band height="729">
				<subreport>
					<reportElement x="391" y="0" width="163" height="90" uuid="7f9d8044-9c3f-4503-b609-3153789c1f63"/>
					<subreportParameter name="STUDENT_ID">
						<subreportParameterExpression><![CDATA[$F{student_id}]]></subreportParameterExpression>
					</subreportParameter>
					<subreportParameter name="GRADING_PERIOD_ID">
						<subreportParameterExpression><![CDATA[$F{qur_id}]]></subreportParameterExpression>
					</subreportParameter>
					<connectionExpression><![CDATA[$P{REPORT_CONNECTION}]]></connectionExpression>
					<subreportExpression><![CDATA[$P{ABSOLUTE_PATH}+"TERM_GRADE.jasper"]]></subreportExpression>
				</subreport>
				<crosstab>
					<reportElement x="0" y="0" width="390" height="90" uuid="04c4be85-bae6-4355-b315-f4dfc4daaba0">
						<property name="com.jaspersoft.studio.layout" value="com.jaspersoft.studio.editor.layout.VerticalRowLayout"/>
						<property name="com.jaspersoft.studio.crosstab.style.header" value="Crosstab_CH"/>
						<property name="com.jaspersoft.studio.crosstab.style.group" value="Crosstab_CG"/>
						<property name="com.jaspersoft.studio.crosstab.style.total" value="Crosstab_CT"/>
						<property name="com.jaspersoft.studio.crosstab.style.detail" value="Crosstab_CD"/>
					</reportElement>
					<parametersMapExpression><![CDATA[$P{MAP}]]></parametersMapExpression>
					<crosstabDataset>
						<dataset resetType="Group" resetGroup="ST_GROUP"/>
					</crosstabDataset>
					<crosstabHeaderCell>
						<cellContents>
							<box>
								<pen lineWidth="2.0"/>
								<bottomPen lineWidth="2.5"/>
							</box>
							<staticText>
								<reportElement x="0" y="0" width="60" height="20" uuid="f271f180-47ff-4c4d-98fe-80fcc264d13d"/>
								<box>
									<pen lineWidth="1.0"/>
								</box>
								<textElement textAlignment="Center" verticalAlignment="Middle">
									<font size="12" isBold="true"/>
								</textElement>
								<text><![CDATA[Subject]]></text>
							</staticText>
						</cellContents>
					</crosstabHeaderCell>
					<rowGroup name="name" width="60" totalPosition="End">
						<bucket class="java.lang.String">
							<bucketExpression><![CDATA[$F{name}]]></bucketExpression>
						</bucket>
						<crosstabRowHeader>
							<cellContents mode="Opaque" style="Crosstab_CH">
								<textField>
									<reportElement x="0" y="0" width="60" height="20" forecolor="#000000" uuid="77357b68-1839-4e4a-8b5d-32385e485714"/>
									<box>
										<pen lineWidth="1.0"/>
									</box>
									<textElement textAlignment="Center" verticalAlignment="Middle"/>
									<textFieldExpression><![CDATA[$V{name}]]></textFieldExpression>
								</textField>
							</cellContents>
						</crosstabRowHeader>
						<crosstabTotalRowHeader>
							<cellContents mode="Opaque" style="Crosstab_CT">
								<staticText>
									<reportElement x="0" y="0" width="60" height="20" forecolor="#000000" uuid="9e0f2556-ac9b-4361-8559-b07539117445"/>
									<box>
										<pen lineWidth="1.0"/>
									</box>
									<textElement textAlignment="Center" verticalAlignment="Middle">
										<font size="12" isBold="true"/>
									</textElement>
									<text><![CDATA[Avarage]]></text>
								</staticText>
							</cellContents>
						</crosstabTotalRowHeader>
					</rowGroup>
					<columnGroup name="quar_name" height="20" totalPosition="End">
						<bucket class="java.lang.String">
							<bucketExpression><![CDATA[$F{quar_name}]]></bucketExpression>
						</bucket>
						<crosstabColumnHeader>
							<cellContents mode="Opaque" style="Crosstab_CH">
								<box>
									<pen lineWidth="2.0"/>
									<bottomPen lineWidth="2.5"/>
								</box>
								<textField>
									<reportElement x="0" y="0" width="60" height="20" forecolor="#000000" uuid="2954ea38-e0dd-4088-8ddc-6fa37421ecf0"/>
									<box>
										<pen lineWidth="1.0"/>
									</box>
									<textElement textAlignment="Center" verticalAlignment="Middle">
										<font size="12" isBold="true"/>
									</textElement>
									<textFieldExpression><![CDATA[$V{quar_name}]]></textFieldExpression>
								</textField>
							</cellContents>
						</crosstabColumnHeader>
						<crosstabTotalColumnHeader>
							<cellContents mode="Opaque" style="Crosstab_CT">
								<property name="com.jaspersoft.studio.unit.width" value="px"/>
								<property name="com.jaspersoft.studio.layout" value="com.jaspersoft.studio.editor.layout.HorizontalRowLayout"/>
								<box>
									<pen lineWidth="2.0"/>
									<bottomPen lineWidth="2.5"/>
								</box>
								<staticText>
									<reportElement x="0" y="0" width="60" height="20" forecolor="#000000" uuid="c854bbf6-dc92-4997-a72b-3dcdaaa29c08"/>
									<box>
										<pen lineWidth="1.0"/>
									</box>
									<textElement textAlignment="Center" verticalAlignment="Middle">
										<font size="12" isBold="true"/>
									</textElement>
									<text><![CDATA[Total quar_name]]></text>
								</staticText>
								<staticText>
									<reportElement x="60" y="0" width="60" height="20" uuid="aa50d07c-4fad-4ca5-b32f-986afbcb0ab4"/>
									<box>
										<pen lineWidth="1.0"/>
									</box>
									<textElement textAlignment="Center" verticalAlignment="Middle">
										<font size="12" isBold="true"/>
									</textElement>
									<text><![CDATA[Grade]]></text>
								</staticText>
							</cellContents>
						</crosstabTotalColumnHeader>
					</columnGroup>
					<measure name="full_grade_MEASURE" class="java.lang.Integer" calculation="Sum">
						<measureExpression><![CDATA[$F{full_grade}]]></measureExpression>
					</measure>
					<measure name="quar_name_measure" class="java.lang.Integer" calculation="DistinctCount">
						<measureExpression><![CDATA[$F{quar_name}]]></measureExpression>
					</measure>
					<measure name="name_measure" class="java.lang.Integer" calculation="DistinctCount">
						<measureExpression><![CDATA[$F{name}]]></measureExpression>
					</measure>
					<crosstabCell width="60" height="20">
						<cellContents mode="Opaque" style="Crosstab_CD">
							<textField>
								<reportElement x="0" y="0" width="60" height="20" forecolor="#000000" uuid="2daa96d8-9abe-4937-8c9e-dad37074ab01"/>
								<box>
									<pen lineWidth="1.0"/>
								</box>
								<textElement textAlignment="Center" verticalAlignment="Middle"/>
								<textFieldExpression><![CDATA[$V{full_grade_MEASURE}]]></textFieldExpression>
							</textField>
						</cellContents>
					</crosstabCell>
					<crosstabCell width="120" height="20" columnTotalGroup="quar_name">
						<cellContents mode="Opaque" style="Crosstab_CT">
							<property name="com.jaspersoft.studio.layout" value="com.jaspersoft.studio.editor.layout.HorizontalRowLayout"/>
							<textField>
								<reportElement x="0" y="0" width="60" height="20" forecolor="#000000" uuid="3f831baf-12f8-4e5c-adf6-ded326994067"/>
								<box>
									<pen lineWidth="1.0"/>
								</box>
								<textElement textAlignment="Center" verticalAlignment="Middle"/>
								<textFieldExpression><![CDATA[$V{full_grade_MEASURE_quar_name_ALL}/$V{quar_name_measure_name_quar_name_ALL}]]></textFieldExpression>
							</textField>
							<textField>
								<reportElement x="60" y="0" width="60" height="20" uuid="06e472d5-4662-481d-9985-e34c1b0b7ec8"/>
								<box>
									<pen lineWidth="1.0"/>
								</box>
								<textElement textAlignment="Center" verticalAlignment="Middle"/>
								<textFieldExpression><![CDATA[Utils.calculateGrade(($V{full_grade_MEASURE_quar_name_ALL}/$V{quar_name_measure_name_quar_name_ALL}),100 ,$P{REPORT_PARAMETERS_MAP}.get("scores"))]]></textFieldExpression>
							</textField>
						</cellContents>
					</crosstabCell>
					<crosstabCell width="60" height="20" rowTotalGroup="name">
						<cellContents mode="Opaque" style="Crosstab_CT">
							<property name="com.jaspersoft.studio.layout" value="com.jaspersoft.studio.editor.layout.HorizontalRowLayout"/>
							<textField>
								<reportElement x="0" y="0" width="60" height="20" forecolor="#000000" uuid="62916b9e-f2ea-4eff-aaa7-143c89864be0"/>
								<box>
									<pen lineWidth="1.0"/>
								</box>
								<textElement textAlignment="Center" verticalAlignment="Middle">
									<font size="12" isBold="true"/>
								</textElement>
								<textFieldExpression><![CDATA[$V{full_grade_MEASURE}/$V{name_measure}]]></textFieldExpression>
							</textField>
						</cellContents>
					</crosstabCell>
					<crosstabCell width="120" height="20" rowTotalGroup="name" columnTotalGroup="quar_name">
						<cellContents mode="Opaque" style="Crosstab_CT">
							<property name="com.jaspersoft.studio.layout" value="com.jaspersoft.studio.editor.layout.HorizontalRowLayout"/>
							<textField>
								<reportElement x="0" y="0" width="60" height="20" forecolor="#000000" uuid="ddc6e371-2a9b-40c2-9b83-836f739479ff"/>
								<box>
									<pen lineWidth="1.0"/>
								</box>
								<textElement textAlignment="Center" verticalAlignment="Middle">
									<font size="12" isBold="true"/>
								</textElement>
								<textFieldExpression><![CDATA[($V{full_grade_MEASURE_name_quar_name_ALL}/$V{quar_name_measure_name_quar_name_ALL})/$V{name_measure}]]></textFieldExpression>
							</textField>
							<textField>
								<reportElement x="60" y="0" width="60" height="20" uuid="56b5779d-d2ec-47d3-9950-f6ae86878d37">
									<printWhenExpression><![CDATA[AND(true,"" !=
	T($P{REPORT_PARAMETERS_MAP}.put("TOTAL_GRADE",TEXT($V{full_grade_MEASURE_name_quar_name_ALL},"##0.00")))
  + T($P{REPORT_PARAMETERS_MAP}.put("QUAR_NUM",TEXT($V{quar_name_measure_name_quar_name_ALL},"##0.00")))
  + T($P{REPORT_PARAMETERS_MAP}.put("SUB_NUM",TEXT($V{name_measure},"##0.00")))
  )]]></printWhenExpression>
								</reportElement>
								<box>
									<pen lineWidth="1.0"/>
								</box>
								<textElement textAlignment="Center" verticalAlignment="Middle">
									<font size="12" isBold="true"/>
								</textElement>
								<textFieldExpression><![CDATA[Utils.calculateGrade((($V{full_grade_MEASURE_name_quar_name_ALL}/$V{quar_name_measure_name_quar_name_ALL})/$V{name_measure}),100 ,$P{REPORT_PARAMETERS_MAP}.get("scores"))]]></textFieldExpression>
							</textField>
						</cellContents>
					</crosstabCell>
				</crosstab>
				<barChart>
					<chart evaluationTime="Report">
						<reportElement x="1" y="470" width="553" height="157" uuid="53f48a12-1563-4a37-a739-fc019e9f513c"/>
						<chartTitle/>
						<chartSubtitle/>
						<chartLegend/>
					</chart>
					<categoryDataset>
						<categorySeries>
							<seriesExpression><![CDATA[$F{quar_name}]]></seriesExpression>
							<categoryExpression><![CDATA[$F{name}]]></categoryExpression>
							<valueExpression><![CDATA[$F{full_grade}]]></valueExpression>
						</categorySeries>
					</categoryDataset>
					<barPlot>
						<plot labelRotation="90.0">
							<seriesColor seriesOrder="0" color="#ED0707"/>
							<seriesColor seriesOrder="1" color="#009E2A"/>
							<seriesColor seriesOrder="2" color="#005E9C"/>
						</plot>
						<itemLabel/>
						<categoryAxisFormat labelRotation="90.0">
							<axisFormat labelColor="#000000" tickLabelColor="#000000" axisLineColor="#000000">
								<tickLabelFont>
									<font size="8"/>
								</tickLabelFont>
							</axisFormat>
						</categoryAxisFormat>
						<valueAxisFormat>
							<axisFormat labelColor="#000000" tickLabelColor="#000000" axisLineColor="#000000"/>
						</valueAxisFormat>
					</barPlot>
				</barChart>
				<stackedBarChart>
					<chart evaluationTime="Report">
						<reportElement x="350" y="260" width="200" height="200" uuid="5d5487d1-8185-43eb-92d5-c1aac6f1d343"/>
						<chartTitle/>
						<chartSubtitle/>
						<chartLegend/>
					</chart>
					<categoryDataset>
						<dataset>
							<datasetRun subDataset="Chart2" uuid="0a5ede9c-a7f5-4c9d-95f4-386cdedbf8f8">
								<datasetParameter name="ST_ID">
									<datasetParameterExpression><![CDATA[$F{student_id}]]></datasetParameterExpression>
								</datasetParameter>
							</datasetRun>
						</dataset>
						<categorySeries>
							<seriesExpression><![CDATA[$F{quar_name}]]></seriesExpression>
							<categoryExpression><![CDATA[$F{quar_name}]]></categoryExpression>
							<valueExpression><![CDATA[$F{sum(v.full_grade)/count(v.full_grade)}]]></valueExpression>
						</categorySeries>
					</categoryDataset>
					<barPlot>
						<plot>
							<seriesColor seriesOrder="0" color="#ED0707"/>
							<seriesColor seriesOrder="1" color="#009E2A"/>
							<seriesColor seriesOrder="2" color="#005E9C"/>
						</plot>
						<itemLabel/>
						<categoryAxisFormat>
							<axisFormat labelColor="#000000" tickLabelColor="#000000" axisLineColor="#000000"/>
						</categoryAxisFormat>
						<valueAxisFormat>
							<axisFormat labelColor="#000000" tickLabelColor="#000000" axisLineColor="#000000"/>
						</valueAxisFormat>
					</barPlot>
				</stackedBarChart>
				<staticText>
					<reportElement x="360" y="660" width="100" height="30" uuid="6da505dc-51bb-437a-aa22-7dec711dbdfe"/>
					<textElement textAlignment="Center" verticalAlignment="Middle">
						<font size="16" isBold="true"/>
					</textElement>
					<text><![CDATA[Principal]]></text>
				</staticText>
				<line>
					<reportElement x="310" y="720" width="201" height="1" uuid="9c9f85ac-7512-413d-a8d3-fb42c0ff0c8b"/>
				</line>
				<subreport>
					<reportElement x="0" y="350" width="163" height="90" uuid="8e4af7af-ba12-4fe6-a26c-93e069715021"/>
					<subreportParameter name="ST_ID">
						<subreportParameterExpression><![CDATA[$F{student_id}]]></subreportParameterExpression>
					</subreportParameter>
					<subreportParameter name="LEVEL_CODE">
						<subreportParameterExpression><![CDATA[$F{level_code}]]></subreportParameterExpression>
					</subreportParameter>
					<connectionExpression><![CDATA[$P{REPORT_CONNECTION}]]></connectionExpression>
					<subreportExpression><![CDATA[$P{ABSOLUTE_PATH}+"CHART2.jasper"]]></subreportExpression>
				</subreport>
			</band>
		</groupFooter>
	</group>
	<background>
		<band splitType="Stretch"/>
	</background>
	<title>
		<band splitType="Stretch"/>
	</title>
	<pageHeader>
		<band height="84" splitType="Stretch">
			<textField evaluationTime="Band">
				<reportElement x="90" y="30" width="68" height="30" forecolor="#FFFFFF" uuid="97f094c7-2b4c-416a-9c09-8c554b9bfc49"/>
				<textElement>
					<font fontName="Segoe UI"/>
				</textElement>
				<textFieldExpression><![CDATA[AND(true,"" !=
	 T($P{MAP}.put("SCALE_ID",$P{LETTER_ID}))
  + T($P{MAP}.put("CONNECTION",	$P{REPORT_CONNECTION} ))
  + T($P{MAP}.put("ABSOLUTE_PATH",$P{ABSOLUTE_PATH}) )
  )]]></textFieldExpression>
			</textField>
			<subreport>
				<reportElement x="260" y="23" width="83" height="20" uuid="59a1f637-513b-4a30-a3d7-2ee5b0f7b722"/>
				<subreportParameter name="SCALE_ID">
					<subreportParameterExpression><![CDATA[$P{LETTER_ID}]]></subreportParameterExpression>
				</subreportParameter>
				<connectionExpression><![CDATA[$P{REPORT_CONNECTION}]]></connectionExpression>
				<returnValue subreportVariable="SCORES" toVariable="SCORES"/>
				<subreportExpression><![CDATA[$P{ABSOLUTE_PATH}+"SCORES.jasper"]]></subreportExpression>
			</subreport>
			<textField evaluationTime="Band">
				<reportElement x="180" y="23" width="75" height="30" forecolor="#FFFFFF" uuid="7eb9e176-9eab-4069-b434-cca789623fb5"/>
				<textElement>
					<font fontName="Segoe UI"/>
				</textElement>
				<textFieldExpression><![CDATA[T($P{MAP}.put("db_name",$P{DB_NAME}))
+ T($P{MAP}.put("scale_id",$P{LETTER_ID}))
+ T($P{MAP}.put("scores",$V{SCORES}))]]></textFieldExpression>
			</textField>
			<image>
				<reportElement x="-20" y="0" width="595" height="84" uuid="c7fba9d1-08ae-4edc-add1-011d9263412f">
					<property name="com.jaspersoft.studio.unit.height" value="px"/>
				</reportElement>
				<box>
					<bottomPen lineWidth="1.25"/>
				</box>
				<imageExpression><![CDATA[$P{ABSOLUTE_PATH}+$P{REPORT_NAME}+"-HEADER.jpeg"]]></imageExpression>
			</image>
		</band>
	</pageHeader>
	<columnHeader>
		<band splitType="Stretch"/>
	</columnHeader>
	<detail>
		<band splitType="Stretch"/>
	</detail>
	<columnFooter>
		<band splitType="Stretch"/>
	</columnFooter>
	<pageFooter>
		<band splitType="Stretch"/>
	</pageFooter>
	<summary>
		<band splitType="Stretch"/>
	</summary>
</jasperReport>
